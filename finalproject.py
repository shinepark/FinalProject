# -*- coding: utf-8 -*-
"""FinalProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q48G1b5wtKU8V7WVwsDtXl4pW71fLkAB
"""

!pip install sklearn_recommender

import sklearn_recommender as rec
import numpy as np
import pandas as pd

songs = pd.read_csv('song_data.csv')
songs

song_file = 'https://static.turi.com/datasets/millionsong/10000.txt'


song_stats = pd.read_table(song_file,header=None)
song_stats.columns = ['user_id', 'song_id', 'listen_count']
song_stats

song_df = pd.merge(song_stats, songs.drop_duplicates(['song_id']), on="song_id", how="left")
song_df

song_df['song'] = song_df['title'].map(str) + " - " + song_df['artist_name']
song_df

#print in order of mean listen count
top = song_df.groupby('song')['listen_count'].mean().sort_values(ascending=False)
top

#print in order of count
top = song_df.groupby('song')['listen_count'].count().sort_values(ascending=False)
top

from sklearn.model_selection import train_test_split

train, test = train_test_split(song_df, test_size=0.20, random_state=0)
print(train)
print(test)

tf = skr.transformer.SimilarityTransformer(cols=(2, -1), index_col='item_id', normalize=True)
recommend = tf.transform(top)

one_user_rec = tf.recommend(user_id)

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()

regressor.fit(train)

predict = regressor.predict(test)

from sklearn import metrics

metrics.mean_squared_error(test, predict)